def count_and_calculate_percentages(file_path):
    from collections import defaultdict

    # Initialize counters
    total_count = 0
    char_count = defaultdict(int)
    letters_digits_count = defaultdict(int)
    letters_and_digits = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'

    try:
        # Open the file
        with open(file_path, 'r') as file:
            contents = file.read()

        # Count occurrences of all characters
        for char in contents:
            total_count += 1
            char_count[char] += 1
            if char in letters_and_digits:
                letters_digits_count[char] += 1

        # Print the total count of all characters
        print("Total character count:")
        print(total_count)

        # Calculate and print the percentage representation of each letter and digit
        print("\nPercentage representation of letters and digits:")
        for char in letters_digits_count:
            percentage = (letters_digits_count[char] / total_count) * 100
            print(f"'{char}': {letters_digits_count[char]} ({percentage:.2f}%)")

    except FileNotFoundError:
        print(f"Error: The file '{file_path}' was not found.")
    except Exception as e:
        print(f"An error occurred: {e}")

# Example usage:
file_path = 'your_file.txt'  # Replace with your file path
count_and_calculate_percentages(file_path)
